// RobotBuilder Version: 0.0.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc20.SensorBoard;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.Encoder.PIDSourceParameter;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Encoder pIDtestEncoder;
    public static Jaguar pIDtestJag;
<<<<<<< HEAD
    public static Gyro driveTrainGyro;
    public static Jaguar driveTrainBottomLeftJag;
    public static Jaguar driveTrainTopLeftJag;
    public static Jaguar driveTrainTopRightJag;
    public static Jaguar driveTrainBottomRightJag;
    public static RobotDrive driveTrainRobotDrive41;
=======
    public static Gyro gyroSystemGyro;
    public static AnalogChannel magneticencoderAnalogInput1;
    public static Jaguar magneticencoderJaguar1;
>>>>>>> origin/master
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Jaguar getBottomLeftJag(){
        return driveTrainBottomLeftJag;
    }
    public Jaguar getBottomRightJag(){
        return driveTrainBottomRightJag;
    }
    public Jaguar getTopLeftJag(){
        return driveTrainTopLeftJag;
    }
    public Jaguar getTopRightJag(){
        return driveTrainTopRightJag;
    }
    public Gyro getGyro(){
        return driveTrainGyro;
    }
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pIDtestEncoder = new Encoder(2, 14, 2, 13, false, EncodingType.k4X);
	LiveWindow.addSensor("PIDtest", "Encoder", pIDtestEncoder);
        pIDtestEncoder.setDistancePerPulse(1.0);
        pIDtestEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        pIDtestEncoder.start();
        pIDtestJag = new Jaguar(2, 1);
	LiveWindow.addActuator("PIDtest", "Jag", pIDtestJag);
        
<<<<<<< HEAD
        driveTrainGyro = new Gyro(1, 1);
	LiveWindow.addSensor("DriveTrain", "Gyro", driveTrainGyro);
        driveTrainGyro.setSensitivity(1.25);
        driveTrainBottomLeftJag = new Jaguar(1, 4);
	LiveWindow.addActuator("DriveTrain", "BottomLeftJag", driveTrainBottomLeftJag);
        
        driveTrainTopLeftJag = new Jaguar(1, 1);
	LiveWindow.addActuator("DriveTrain", "TopLeftJag", driveTrainTopLeftJag);
        
        driveTrainTopRightJag = new Jaguar(1, 2);
	LiveWindow.addActuator("DriveTrain", "TopRightJag", driveTrainTopRightJag);
        
        driveTrainBottomRightJag = new Jaguar(1, 3);
	LiveWindow.addActuator("DriveTrain", "BottomRightJag", driveTrainBottomRightJag);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainTopLeftJag, driveTrainBottomLeftJag,
              driveTrainTopRightJag, driveTrainBottomRightJag);
	
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(1.0);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
=======
        gyroSystemGyro = new Gyro(1, 1);
	LiveWindow.addSensor("GyroSystem", "Gyro ", gyroSystemGyro);
        gyroSystemGyro.setSensitivity(1.25);
        magneticencoderAnalogInput1 = new AnalogChannel(1, 2);
	LiveWindow.addSensor("Magnetic encoder", "Analog Input 1", magneticencoderAnalogInput1);
        
        magneticencoderJaguar1 = new Jaguar(1, 2);
	LiveWindow.addActuator("Magnetic encoder", "Jaguar 1", magneticencoderJaguar1);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
>>>>>>> origin/master
    }
}
