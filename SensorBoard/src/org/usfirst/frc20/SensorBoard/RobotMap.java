// RobotBuilder Version: 0.0.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc20.SensorBoard;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.Encoder.PIDSourceParameter;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Encoder pIDtestEncoder;
    public static Jaguar pIDtestJag;
    public static Gyro gyroSystemGyro;
    public static AnalogChannel magneticencoderAnalogInput1;
    public static Jaguar magneticencoderJaguar1;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pIDtestEncoder = new Encoder(2, 14, 2, 13, false, EncodingType.k4X);
	LiveWindow.addSensor("PIDtest", "Encoder", pIDtestEncoder);
        pIDtestEncoder.setDistancePerPulse(1.0);
        pIDtestEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        pIDtestEncoder.start();
        pIDtestJag = new Jaguar(1, 1);
	LiveWindow.addActuator("PIDtest", "Jag", pIDtestJag);
        
        gyroSystemGyro = new Gyro(1, 1);
	LiveWindow.addSensor("GyroSystem", "Gyro ", gyroSystemGyro);
        gyroSystemGyro.setSensitivity(1.25);
        magneticencoderAnalogInput1 = new AnalogChannel(1, 2);
	LiveWindow.addSensor("Magnetic encoder", "Analog Input 1", magneticencoderAnalogInput1);
        
        magneticencoderJaguar1 = new Jaguar(1, 2);
	LiveWindow.addActuator("Magnetic encoder", "Jaguar 1", magneticencoderJaguar1);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
